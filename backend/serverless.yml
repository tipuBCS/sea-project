# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: seaproject
service: sea-project-backend

provider:
  name: aws
  runtime: python3.10
  region: eu-west-2
  stage: ${opt:stage, 'dev'}
  httpApi:
    cors: true

functions:
  api:
    handler: app.main.handler
    architecture: arm64
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - httpApi:
          path: /{proxy+}
          method: "*"

package:
  patterns:
    - "!**/*.pyc"
    - "!.env/**"
    - "!node_modules/**"

plugins:
  - serverless-python-requirements
  - serverless-offline
  - serverless-stack-output
  - serverless-s3-sync

resources:
  Outputs:
    ApiUrl:
      Value: 
        Fn::Join:
          - ""
          - - "https://"
            - Ref: HttpApi
            - ".execute-api.${aws:region}.amazonaws.com/api"
      Description: "API Gateway URL"

custom:
  output:
    handler: scripts/output.handler # Run the handler in this file
    file: scripts/dist/config.json # toml, yaml, yml, and json format is available. Make sure the location where you want to save the file exists
  pythonRequirements:
    layer: true
    pythonBin: python3
    architectures:
      - arm64
  s3Sync:
    hooks:
      # This hook will run after the deploy:finalize hook
      - after:deploy:finalize
    buckets:
      # A simple configuration for copying static assets
      - bucketName: sea-project # required
        deleteRemoved: false
        localDir: scripts/dist # required
